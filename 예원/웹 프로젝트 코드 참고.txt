
◆ text-align:center
가운데 정렬

◆ background-image:url(주소);
사진 url
◇이미지 태그 <img src="https://~.jpg" width="500px" height="300px" alt="오류시 표시">
◆ background-repeat: no-repeat;
사진 반복 안 되게
◆ background-size: cover;
사진이 전체 뒤덮게

◇ a태그 참고
<li><a href="#define">정의</a></li>
:: 정의 클릭하면 id="define"로 정의된 a태그로 이동
<dt id="define"><a href="#">정의</a></dt>
:: 정의 클릭하면 현재 페이지 가장 첫 번째 부분(제일 위쪽)으로 이동

◆ margin :: "테두리 바깥"의 간격을
◆ padding :: "테두리 안"의 간격을 나타냅니다.

◆ div :: display값 디폴트가 block 속성의 공간 분할 태그
◆ span :: display값 디폴트가 inline 속성의 공간 분할 태그

◇ 참고용 태그
<header>, <nav>, <aside>, <section>, <article>, <footer>

========== ========== ========== ========== ==========

◇ display 속성은 CSS에서 요소의 렌더링 방식을 지정하는 속성입니다.
이 속성을 사용하여 요소를 어떻게 표시할지 결정할 수 있습니다.
각 값은 특정한 렌더링 특성을 가지고 있습니다.

주요한 display 속성 값은 다음과 같습니다:

◆ block:
ㅡ 한 줄 전체를 차지하고, 상하로는 필요한 공간만 차지하며 조절이 가능
block은 블록 레벨 요소로, 한 줄에 하나의 요소가 위치하게 됩니다.
요소의 너비는 부모 요소의 가로폭을 모두 차지하며, 줄 바꿈이 일어납니다.
예시: <div>, <p>, <h1>, <ul>, <li> 등

◆ inline:
ㅡ 상하좌우 모두 필요한 만큼만 공간 차지, 단 조절은 불가능
inline은 인라인 요소로, 다른 인라인 요소와 같은 줄에 위치하게 됩니다.
요소의 너비는 포함하는 콘텐츠만큼만 차지하며 줄 바꿈이 없습니다.
예시: <span>, <a>, <strong>, <em> 등

◆ inline-block:
ㅡ 상하좌우 필요한 만큼만 공간 차지, 상하좌우 크기 조절 가능
inline-block은 블록 레벨의 특성을 가지면서도 인라인 요소처럼 줄 바꿈이 없습니다.
요소의 너비는 포함하는 콘텐츠만큼이며 다른 인라인 요소와 같은 줄에 위치합니다.
예시: <img>, <button>, <input> 등

◆ none:
none은 화면에 표시되지 않습니다. 즉, 해당 요소를 숨김 처리합니다.
문서의 레이아웃에 차지하는 공간이 없습니다.
flex:
flex는 유연한 박스 모델을 제공하여 요소를 효율적으로 배치할 수 있습니다.
부모 요소에 display: flex;를 설정하면 해당 부모는 Flex 컨테이너가 되어 자식 요소를 배치합니다.

◆ grid:
grid는 그리드 레이아웃을 사용하여 요소를 배치하는 속성입니다.

부모 요소에 display: grid;를 설정하면 
해당 부모는 그리드 컨테이너가 되어 자식 요소를 그리드에 배치합니다.
이 외에도 다양한 display 속성 값이 있으며, 
이를 적절히 조합하여 원하는 레이아웃을 만들 수 있습니다.

========== ========== ========== ========== ==========
<div style="width:1440px; 
height:550px; 
overflow:hidden; 
display:flex; 
margin:0px auto; 
padding-top:100px; 
justify-content:space-between; 
padding-left:180px; 
padding-right:180px">

해당 코드는 <div> 요소에 직접 적용된 스타일입니다. 
여러 속성들이 사용되었는데, 각각을 설명하겠습니다:

◆ width: 1440px;
해당 <div>의 너비를 1440픽셀로 설정합니다.

◆ height: 550px;
해당 <div>의 높이를 550픽셀로 설정합니다.

◆ overflow: hidden;
요소 내부의 콘텐츠가 요소의 경계를 벗어날 경우, 넘치는 부분을 숨김으로 처리합니다.

◆ display: flex;
해당 <div>를 Flex Container로 설정합니다. 이는 자식 요소들을 Flex Items로 다루게 합니다.

◆ margin: 0px auto;
상하 여백은 0픽셀, 좌우 여백은 자동(중앙 정렬)으로 설정합니다.

◆ padding-top: 100px;
해당 <div>의 윗쪽(상단) 여백을 100픽셀로 설정합니다.

◆ justify-content: space-between;
Flex Container 내부의 Flex Items들을 양 끝으로 정렬합니다. (간격은 남깁니다.)

◆ padding-left: 180px;
해당 <div>의 왼쪽 여백을 180픽셀로 설정합니다.

◆ padding-right: 180px;
해당 <div>의 오른쪽 여백을 180픽셀로 설정합니다.

이 스타일들을 종합하면, 1440픽셀의 너비를 가진 <div> 요소가 중앙 정렬되며,
윗쪽에 100픽셀의 여백이 주어지고, 내부에 Flex Container로서 
자식 요소들이 공간 사이에 균등하게 배치되도록 설정되었습니다. 
좌우로는 각각 180픽셀의 여백이 주어졌으며, 넘치는 콘텐츠는 숨김 처리됩니다.